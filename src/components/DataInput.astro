---
import { entityEnum } from "@utils/constants";
import InputGroup, { InputSize } from "@components/InputGroup.astro";
import Address from "./Address.astro";
import { UUID } from "mongodb";
import { getIdentities } from "@api/identities";
import routes from "@utils/routes";

const {
  name,
  type,
  personName,
  personStreet,
  personApt,
  personPostalCode,
  personCity,
  personPin,
  companyName,
  companyStreet,
  companyApt,
  companyPostalCode,
  companyCity,
  companyPin,
  userId,
} = Astro.props;

let prefix = name || "";
let identities;

if (userId && UUID.isValid(userId)) {
  try {
    const response = await getIdentities(userId);

    ({ identities } = response);
  } catch {
    return Astro.redirect(routes.NOT_FOUND);
  }
}
---

{
  identities && identities.length ? (
    <identity-selector data-userid={userId}>
      <select>
        <option>Wybierz z zapisanych tożsamości</option>
        {identities.map(({ name, type, _id }) => (
          <option value={_id}>
            {name} ({type})
          </option>
        ))}
      </select>
    </identity-selector>
  ) : (
    ``
  )
}

<data-selector data-prefix={prefix}>
  <InputGroup>
    <label for="type">Rodzaj podmiotu</label>
    <select id="type" name={`${prefix}Type`} value={type}>
      {
        entityEnum.map((entityType) => (
          <option selected={type === entityType}>{entityType}</option>
        ))
      }
    </select>
  </InputGroup>
  <fieldset
    data-type={entityEnum[0]}
    style={type === entityEnum[1] ? `display:none` : ``}
  >
    <InputGroup size={InputSize.lg}>
      <label for="personName">Imię i nazwisko</label>
      <input
        id="personName"
        type="text"
        name={`${prefix}PersonName`}
        value={personName}
      />
    </InputGroup>
    <InputGroup>
      <label for="personPin">Numer PESEL</label>
      <input
        id="personPin"
        type="text"
        name={`${prefix}PersonPin`}
        value={personPin}
        class="flex-grow"
      />
    </InputGroup>
    <Address
      street={personStreet}
      apt={personApt}
      postalCode={personPostalCode}
      city={personCity}
      streetFieldName={`${prefix}PersonStreet`}
      aptFieldName={`${prefix}PersonApt`}
      postalCodeFieldName={`${prefix}PersonPostalCode`}
      cityFieldName={`${prefix}PersonCity`}
    />
  </fieldset>
  <fieldset
    data-type={entityEnum[1]}
    style={type === entityEnum[0] ? `display:none` : ``}
  >
    <InputGroup size={InputSize.lg}>
      <label for="companyName">Nazwa firmy</label>
      <input
        id="companyName"
        type="text"
        name={`${prefix}CompanyName`}
        value={companyName}
      />
    </InputGroup>
    <InputGroup>
      <label for="companyPin">Numer NIP</label>
      <input
        id="companyPin"
        type="text"
        name={`${prefix}CompanyPin`}
        value={companyPin}
        class="flex-grow"
      />
    </InputGroup>
    <Address
      street={companyStreet}
      apt={companyApt}
      postalCode={companyPostalCode}
      city={companyCity}
      streetFieldName={`${prefix}CompanyStreet`}
      aptFieldName={`${prefix}CompanyApt`}
      postalCodeFieldName={`${prefix}CompanyPostalCode`}
      cityFieldName={`${prefix}CompanyCity`}
    />
  </fieldset>
</data-selector>

<style>
  data-selector {
    @apply flex flex-col gap-20;
  }

  :global(data-selector div input) {
    @apply flex-grow;
  }

  identity-selector select {
    @apply w-full;
  }
</style>

<script>
  import "@wc/DataSelector";
  import "@wc/IdentitySelector";
</script>
