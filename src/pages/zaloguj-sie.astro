---
import Layout from "../layouts/Layout.astro";
import { getSession } from "../auth-astro/server";
import { SignOut } from "../auth-astro/components";

const session = await getSession(Astro.request);

if (session) {
  return Astro.redirect("/moje-dokumenty");
}

const url = new URL(Astro.request.url);
const redirectUrl = url.searchParams.get("redirect");
---

<Layout title="Zaloguj się - Prawniczek">
  {
    session ? (
      <>
        <p>Welcome {session.user?.email}</p>
        <SignOut>Wyloguj</SignOut>
      </>
    ) : (
      <login-form redirect={redirectUrl}>
        <form>
          <input type="email" name="email" required />
          <input type="password" name="password" required />
          <button type="submit">Zaloguj się</button>
        </form>
        <footer>
          Nie jesteś jeszcze konta?
          <a
            href={`${Astro.url.origin}/zaloz-konto${
              redirectUrl ? `/?redirect=${redirectUrl}` : ""
            }`}
          >
            Załóż
          </a>
        </footer>
      </login-form>
    )
  }
</Layout>

<script>
  import { signIn } from "../auth-astro/client";

  class LoginForm extends HTMLElement {
    form: HTMLFormElement;
    redirect: string;

    constructor() {
      super();

      this.form = this.querySelector("form");
      this.redirect = this.getAttribute("redirect");
    }

    connectedCallback() {
      this.form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(this.form);
        const email = String(formData.get("email"));
        const password = String(formData.get("password"));

        this.hideError();

        const response = await signIn("credentials", {
          redirect: false,
          email,
          password,
          callbackUrl: `${document.location.origin}${
            this.redirect ? `/${this.redirect}` : `/moje-dokumenty`
          }`,
        });

        response && this.showError();
      });
    }

    showError() {
      const error = document.createElement("p");
      error.id = "error";
      error.innerHTML = "Podany adres e-mail lub hasło są nieprawidłowe";

      window.setTimeout(() => {
        this.append(error);
      }, 200);
    }

    hideError() {
      const error = this.querySelector("#error");

      if (error) error.remove();
    }
  }
  customElements.define("login-form", LoginForm);
</script>
