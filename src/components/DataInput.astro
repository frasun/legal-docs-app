---
import { entityEnum } from "@utils/constants";
import InputGroup, { InputSize } from "@components/InputGroup.astro";
import Address from "./Address.astro";
import { getIdentities } from "@api/identities";
import { getSession } from "auth-astro/server";
import type { Identity, UserIdentity } from "@type";

interface Props extends Partial<Identity> {
  fieldId?: string;
  showIdentities?: boolean;
  showBankAccount?: boolean;
}

let type: entityEnum | undefined;
({ type } = Astro.props);

if (!type) {
  type = entityEnum.PERSONAL;
}

const {
  fieldId,
  name,
  street,
  apt,
  postalCode,
  city,
  pin,
  showIdentities,
  showBankAccount,
  bankAccount,
} = Astro.props;

let identities: UserIdentity[] | undefined;

const session = await getSession(Astro.request);

if (session && showIdentities) {
  try {
    ({ identities } = await getIdentities(
      `${Astro.request.headers.get("cookie")}`
    ));
  } catch {}
}

const isPersonal = type === entityEnum.PERSONAL;
---

{
  identities && identities.length ? (
    <identity-selector>
      <select>
        <option>Wybierz z zapisanych tożsamości</option>
        {identities.map(({ name, type, _id }) => (
          <option value={_id}>
            {name} ({type})
          </option>
        ))}
      </select>
    </identity-selector>
  ) : (
    ``
  )
}

<data-selector>
  <InputGroup size={InputSize.lg}>
    <label for="type">Rodzaj podmiotu</label>
    <select id="type" name="type" value={type}>
      {
        Object.values(entityEnum).map((entityType) => (
          <option selected={type === entityType}>{entityType}</option>
        ))
      }
    </select>
  </InputGroup>
  <InputGroup size={InputSize.lg}>
    <label
      for="name"
      data-identity={entityEnum.PERSONAL}
      style={isPersonal ? `` : `display: none`}>Imię i nazwisko</label
    >
    <label
      for="name"
      data-identity={entityEnum.COMPANY}
      style={isPersonal ? `display: none` : ``}>Nazwa firmy</label
    >
    <input id="name" type="text" name="name" value={name} />
  </InputGroup>
  <InputGroup size={InputSize.lg}>
    <label
      for="pin"
      data-identity={entityEnum.PERSONAL}
      style={isPersonal ? `` : `display: none`}>Numer PESEL</label
    >
    <label
      for="pin"
      data-identity={entityEnum.COMPANY}
      style={isPersonal ? `display: none` : ``}>Numer NIP</label
    >
    <input id="pin" type="text" name="pin" value={pin} class="flex-grow" />
  </InputGroup>
  {
    showBankAccount && (
      <InputGroup size={InputSize.lg}>
        <label for="bankAccount">Numer konta bankowego</label>
        <input
          id="bankAccount"
          type="text"
          name="bankAccount"
          value={bankAccount}
          class="flex-grow"
        />
      </InputGroup>
    )
  }
  <Address
    street={street}
    apt={apt}
    postalCode={postalCode}
    city={city}
    size={InputSize.lg}
  />
  {fieldId && <input type="hidden" name={fieldId} />}

  <style>
    data-selector {
      @apply flex flex-col gap-20;
    }

    identity-selector {
      @apply py-15;
    }

    identity-selector select {
      @apply w-full;
    }
  </style>

  <script>
    import "@wc/DataSelector";
    import "@wc/IdentitySelector";
  </script>
</data-selector>
