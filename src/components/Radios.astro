---
import InputGroup, { InputType, InputSize } from "./InputGroup.astro";

interface Props {
  options: string[];
  labels: string[];
  token: string[];
  selected: string[];
  fieldId?: string;
}

const { options, labels, token, selected, fieldId } = Astro.props;
---

<radio-grid>
  {
    labels.map((label, labelIndex) => (
      <div>
        <label>{label}</label>
        <div>
          {options.map((opt, index) => (
            <InputGroup type={InputType.checkbox} size={InputSize.lg}>
              <input
                type="radio"
                id={`rd-${labelIndex}-${index}`}
                name={label}
                value={opt}
                aria-label={`${opt}`}
                checked={selected[index].includes(label)}
              />
              <label for={`rd-${labelIndex}-${index}`}>{opt}</label>
            </InputGroup>
          ))}
        </div>
      </div>
    ))
  }
  {
    token.map((t, index) => (
      <input
        type="hidden"
        name={t}
        id={options[index]}
        value={selected[index].toString()}
        data-type="array"
        data-key={fieldId}
      />
    ))
  }
</radio-grid>

<style>
  radio-grid {
    @apply flex flex-col gap-20;
  }

  radio-grid > div {
    @apply flex flex-col gap-5;
  }

  radio-grid label {
    @apply text-sans-lg;
  }

  radio-grid > div > div {
    @apply flex gap-x-60 gap-y-15 flex-wrap;
  }

  radio-grid > div > div :global(> div) {
    @apply flex-grow;
  }
</style>

<script>
  import "@wc/RadioGrid";
</script>
