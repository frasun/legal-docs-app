---
import { getEntry } from "astro:content";
import formatDate from "@utils/date";
import { EMPTY } from "@utils/constants";

const { data, template, token, type } = Astro.props;

if (!data) {
  return;
}

let CompiledContent;
let textContent;

if (template) {
  const answer = await getEntry("answers", template);

  if (!answer) return;

  const { remarkPluginFrontmatter: aData, Content } = await answer.render();

  for (let key of Object.keys(aData)) {
    aData[key] = data[key];
  }

  CompiledContent = Content;
}

if (!template && token) {
  const value = data[token];

  if (type === "date") {
    textContent = formatDate(value);
  } else {
    textContent = value;
  }

  if (value === "") {
    textContent = EMPTY;
  }
}
---

<div>
  {CompiledContent && <CompiledContent />}
  {textContent && textContent}
</div>

<style>
  div {
    @apply text-dark90 text-lg;
  }
</style>
