---
import Layout from "../../../layouts/App.astro";
import { getEntry } from "astro:content";
import { getUserDocument } from "@db/document";
import { getSession } from "auth-astro/server";
import { Icon } from "astro-icon";
import { formatDateTime } from "@utils/date";
import pageTitle from "@utils/pageTitle";
import * as PARAMS from "@utils/urlParams";
import { UUID } from "mongodb";
import SharingModal from "@components/SharingModal.astro";
import { DOCUMENT_SHARED, DOCUMENT_SHARED_PARAM, ERROR } from "@utils/toasts";
import Toast, { ToastStatus } from "@components/Toast.astro";

const { documentId: dId } = Astro.params;
const documentId = String(dId);
const session = await getSession(Astro.request);
const urlParams = new URL(Astro.request.url).searchParams;
const emailParam = urlParams.get(PARAMS.EMAIL);

let data, title;

const userId = session
  ? session.user?.id
  : emailParam
  ? decodeURIComponent(emailParam)
  : undefined;

if (!userId) {
  return Astro.redirect("/404");
}

if (UUID.isValid(documentId)) {
  data = await getUserDocument(documentId, userId);

  if (!data || data.draft) {
    return Astro.redirect("/404");
  }

  title = data.title;
} else {
  return Astro.redirect("/404");
}

const { answers, doc: docId, created, modified, shared, sharedWith } = data;

const document = await getEntry("documents", docId);

if (!document) {
  return Astro.redirect("/404");
}

const { remarkPluginFrontmatter: qData, Content } = await document.render();
const { title: docTitle } = document.data;

for (let key of Object.keys(answers)) {
  qData[key] = answers[key];
}

if (!title) title = docTitle;

const firstTime = urlParams.get("success") === "true" ? true : false;
let toast: string | null = null,
  status: ToastStatus | undefined;

if (urlParams.has(DOCUMENT_SHARED_PARAM)) {
  if (Boolean(Number(urlParams.get(DOCUMENT_SHARED_PARAM)))) {
    toast = DOCUMENT_SHARED;
  } else {
    toast = ERROR;
    status = ToastStatus.error;
  }
}
---

<Layout title={pageTitle(String(title))}>
  <span slot="topbar-title">{title}</span>
  <article
    id="doc"
    class="prose prose-document"
    data-title={title}
    data-template={docTitle}
  >
    <Content />
  </article>
  <aside>
    <header>
      {
        firstTime ? (
          <>
            <Icon name="big-tick" width={48} height={48} />
            <h3>Twój dokument jest gotowy!</h3>
          </>
        ) : (
          <>
            <Icon name="document" width={48} height={48} />
            <h3>{title}</h3>
          </>
        )
      }
    </header>
    {
      firstTime ? (
        <h6>Wybierz co chcesz teraz zrobić</h6>
      ) : (
        <>
          <h6>
            Utworzony:
            <br />
            <time>
              {modified
                ? formatDateTime(modified)
                : formatDateTime(created as Date)}
            </time>
          </h6>
          {shared && sharedWith && sharedWith.length && (
            <h6>
              Wysłany:
              <br />
              <time>{formatDateTime(shared)}</time> do
              <br />
              {sharedWith.join(", ")}
            </h6>
          )}
        </>
      )
    }
    <div>
      <download-pdf data-content-id="#doc">
        <button>
          <Icon name="file-pdf" width={24} height={24} />
          Pobierz plik PDF
        </button>
      </download-pdf>
      {
        session && !shared && (
          <show-modal data-modal="sharing">
            <button>
              <Icon name="email" width={24} height={24} />
              Wyślij przez e-mail
            </button>
          </show-modal>
        )
      }
    </div>
    {
      !emailParam && (
        <footer>
          <a href={`${Astro.url.origin}/moje-dokumenty`}>
            Zobacz w moich dokumentach
          </a>
        </footer>
      )
    }
  </aside>
  {session && <SharingModal contentId="#doc" documentId={documentId} />}
  {toast && <Toast info={toast} status={status} />}
</Layout>

<style>
  article {
    @apply bg-white p-20 sm:p-30 lg:p-50 w-full max-w-[900px] flex-shrink;
    @apply order-2 xl:order-1;

    counter-reset: section;
  }

  article :global(h4::before) {
    counter-increment: section;
    content: "\00A7"counter(section) ". ";
  }

  aside {
    @apply order-1 xl:order-2;
    @apply flex flex-col gap-15 items-start;
    @apply lg:sticky lg:top-[var(--navbar-height)] p-30;
    @apply print:hidden;
    @apply bg-light rounded-lg;
    @apply w-full lg:max-w-[300px];
  }

  aside header {
    @apply flex gap-15 items-center lg:items-start;
  }

  aside header h3 {
    @apply flex-shrink;
  }

  aside header svg {
    @apply flex-shrink-0;
    @apply w-[24px] h-[24px];
  }

  aside > div {
    @apply mt-10;
  }

  aside button {
    @apply btn btn-default btn-big;
  }

  aside a {
    @apply btn btn-alt;
  }

  aside > div {
    @apply flex flex-wrap gap-15;
  }

  aside footer {
    @apply lg:mt-20;
  }
</style>
<script>
  import "@wc/ShowModal";
  import "@wc/DownloadPdf";
</script>
