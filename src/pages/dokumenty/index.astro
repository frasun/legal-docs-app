---
import Layout from "../../layouts/App.astro";
import getSlug from "../../utils/mdxSlug";

const templates = await Astro.glob("../../templates/index/*.mdx");
const categories = await Astro.glob("../../categories/*.mdx");

const url = new URL(Astro.request.url);
const currentCat = url.searchParams.get("kategoria");

let title = "Wszystkie dokumenty";
let documents = templates;

if (currentCat) {
  const currentCategory = categories.find(
    ({ file }) => getSlug(file) === currentCat
  );

  if (currentCategory) {
    title = currentCategory.frontmatter.name;
  }

  documents = templates.filter(({ frontmatter: { categories } }) =>
    categories.includes(currentCat)
  );
}

function getCategoryName(slug) {
  const currentCategory = categories.find(({ file }) => getSlug(file) === slug);

  return currentCategory ? currentCategory.frontmatter.name : null;
}
---

<Layout title="Wszystkie dokumenty - Prawniczek">
  <span slot="topbar-title">{title}</span>
  <category-selector slot="topbar-aside">
    <select>
      <option value="">Wszystkie</option>
      {
        categories.map((cat) => (
          <option
            value={getSlug(cat.file)}
            selected={getSlug(cat.file) === currentCat}
          >
            {cat.frontmatter.name}
          </option>
        ))
      }
    </select>
  </category-selector>
  <section>
    {
      documents.length ? (
        documents.map((document) => (
          <div>
            <a href={`${Astro.url.origin}/dokumenty/${getSlug(document.file)}`}>
              <h3>{document.frontmatter.title}</h3>
            </a>
            <h6>Kategorie</h6>
            <div>
              {document.frontmatter.categories.map((slug) => (
                <a href={`${Astro.url.origin}/dokumenty?kategoria=${slug}`}>
                  {slug}
                </a>
              ))}
            </div>
          </div>
        ))
      ) : (
        <p>Brak dokumentów do wyświetlenia</p>
      )
    }
  </section>
</Layout>

<style>
  header {
    @apply m-20;
    @apply flex gap-20 items-center;
  }

  header h2 {
    @apply flex-grow;
  }

  section {
    @apply flex gap-20 flex-wrap mx-20;
  }

  section > div {
    @apply flex p-20 bg-white rounded flex-col;
  }

  section > div > div {
    @apply flex flex-wrap gap-10;
  }
</style>

<script>
  class CategorySelector extends HTMLElement {
    select: HTMLSelectElement;

    constructor() {
      super();

      this.select = this.querySelector("select");
    }

    connectedCallback() {
      this.select.addEventListener("change", (event) => {
        const val = (event.target as HTMLInputElement).value;

        let url = `${window.location.origin}/dokumenty${
          val.length ? `?kategoria=${val}` : ``
        }`;

        document.location = url;
      });
    }
  }
  customElements.define("category-selector", CategorySelector);
</script>
