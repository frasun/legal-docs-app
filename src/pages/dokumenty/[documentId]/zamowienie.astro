---
import { emailRegExp, testString } from "@utils/dataValidation";
import routes from "@utils/routes";
import { initDocumentOrder } from "@api/documents";
import { captureError } from "@utils/sentry";

const { documentId } = Astro.params as { documentId: string };
let anonymousEmail: string | undefined;

try {
  if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    anonymousEmail = String(formData.get("email"));

    if (!anonymousEmail || !testString(anonymousEmail, emailRegExp)) {
      throw new Error();
    }
  }

  const url = await initDocumentOrder(
    `${Astro.request.headers.get("cookie")}`,
    documentId,
    anonymousEmail
  );

  return Astro.redirect(url);
} catch (e) {
  if (e instanceof Error) {
    if (e.cause === 303) {
      return Astro.redirect(
        `${routes.DOCUMENTS}/${documentId}${routes.DOCUMENT}`
      );
    }

    captureError(e);
    return Astro.redirect(routes.NOT_FOUND);
  }
}
---
