---
import Layout from "../../layouts/App.astro";
import pageTitle from "@utils/pageTitle";
import imageUrl from "@utils/sanityImage";
import formatDate from "@utils/date";
import { PortableText } from "astro-portabletext";
import BlogImage from "@components/BlogImage.astro";
import Badge from "@components/Badge.astro";
import screens from "@utils/screens";
import trimWhitespace from "@utils/whitespace";
import apiHeaders from "@utils/apiHeaders";
import type { Document } from "@type";
import type { ImageAsset } from "@sanity/types";
import type { PortableTextBlock } from "@portabletext/types";
import { blogComponents } from "@components/BlogComponents.astro";

const PAGE_TITLE = "Blog";

let title: string | undefined,
  publishedAt: string | undefined,
  mainImage: ImageAsset | null | undefined,
  body: PortableTextBlock[] | null | undefined,
  excerpt: string | undefined,
  keywords: string | null | undefined,
  description: string | null | undefined,
  documents: Document[] | null | undefined;

try {
  const response = await fetch(
    `${Astro.url.origin}/api/posts/${Astro.params.slug}`,
    {
      headers: {
        ...apiHeaders,
        cookie: Astro.request.headers.get("cookie") as string,
      },
    }
  );

  if (!response.ok) {
    throw new Error("", { cause: response.status });
  }

  ({
    title,
    publishedAt,
    mainImage,
    body,
    excerpt,
    keywords,
    description,
    documents,
  } = await response.json());
} catch (e) {
  if (e instanceof Error) {
    if (e.cause === 401) {
      const url = new URL(Astro.request.url).pathname;
      return Astro.redirect(`/zaloguj-sie?redirect=${url}`);
    } else {
      return Astro.redirect("/404");
    }
  }
}
---

<Layout
  title={pageTitle(`${title} - Blog`)}
  description={description ?? trimWhitespace(excerpt || "")}
  keywords={keywords}
>
  <span slot="topbar-title">{PAGE_TITLE}</span>
  <div>
    <header>
      {
        mainImage && (
          <figure>
            <picture>
              <source
                media={`(max-width:${screens.sm - 1}px)`}
                srcset={`${imageUrl(mainImage, 600, 180).url()}`}
              />
              <source
                media={`(min-width:${screens.sm}px)`}
                srcset={`${imageUrl(mainImage, 1000, 400).url()}`}
              />
              <img
                src={imageUrl(mainImage, 1000, 400).url()}
                alt={title}
                loading="lazy"
                width="100%"
              />
            </picture>
          </figure>
        )
      }
      <div>
        <h1>{title}</h1>
        {
          publishedAt ? (
            <time>{formatDate(publishedAt)}</time>
          ) : (
            <Badge>Szkic artykułu</Badge>
          )
        }
      </div>
    </header>
    <article class="prose">
      {body && <PortableText value={body} components={blogComponents} />}
      {
        documents && (
          <>
            <hr />
            <h4>Powiązane dokumenty</h4>
            <ul>
              {documents.map(({ title, slug: { current: url } }) => (
                <li>
                  <a href={`${Astro.url.origin}/dokumenty/${url}`}>{title}</a>
                </li>
              ))}
            </ul>
          </>
        )
      }
    </article>
  </div>
</Layout>

<style>
  div {
    @apply bg-white rounded-lg my-20 flex flex-col items-start w-full max-w-[1000px];
  }

  header > div {
    @apply py-20 px-20 sm:px-40;
  }

  header h1 {
    @apply text-dark90 mt-20 mb-20;
  }

  header figure {
    @apply rounded-t overflow-hidden p-0;
  }

  article {
    @apply px-20 sm:px-40 pb-40;
  }
</style>
