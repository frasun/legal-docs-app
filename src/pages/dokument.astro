---
import Layout from "../layouts/App.astro";
import { getDocument, Document } from "../../db/document";

const url = new URL(Astro.request.url);
const id = url.searchParams.get("id");

let data = [];

if (!id) {
  return Astro.redirect("/404");
} else {
  data = await getDocument(id);

  if (!data.length) {
    return Astro.redirect("/404");
  }
}

const { answers, doc: docId } = data[0];
const doc = await import(`../docs/${docId}.mdx`);
const { Content } = doc;

for (let [key, value] of Object.entries(answers)) {
  doc.frontmatter[key] = value;
}
---

<Layout title={`Prawniczek - ${doc.frontmatter.title}`}>
  <article id="doc" class="prose" data-title={doc.frontmatter.title}>
    <Content />
  </article>
  <aside>
    <h3>Tw√≥j dokument jest gotowy!</h3>
    <download-button content-id="#doc">
      <button>Pobierz plik Word</button>
    </download-button>
    <print-button>
      <button>Drukuj</button>
    </print-button>
  </aside>
</Layout>

<style>
  article {
    @apply bg-white p-30 lg:p-50 w-[90vw];
    @apply order-2 lg:order-1;
  }

  aside {
    @apply order-1 lg:order-2;
    @apply flex lg:flex-col gap-10 items-start;
    @apply sticky top-30;
    @apply print:hidden;
  }

  aside button {
    @apply btn btn-default btn-big;
  }
</style>
<script>
  import exportDoc from "../utils/exportDoc";

  class DownloadButton extends HTMLElement {
    contentId: string;
    button: HTMLButtonElement;

    constructor() {
      super();

      this.contentId = this.getAttribute("content-id");
      this.button = this.querySelector("button");
    }

    connectedCallback() {
      this.button.addEventListener("click", () => {
        const docContent = document.querySelector(this.contentId);

        exportDoc(docContent.innerHTML, docContent.getAttribute("data-title"));
      });
    }
  }
  customElements.define("download-button", DownloadButton);

  class PrintButton extends HTMLElement {
    button: HTMLButtonElement;

    constructor() {
      super();

      this.button = this.querySelector("button");
    }

    connectedCallback() {
      this.button.addEventListener("click", () => {
        window.print();
      });
    }
  }
  customElements.define("print-button", PrintButton);
</script>
