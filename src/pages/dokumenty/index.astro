---
import Layout from "../../layouts/App.astro";
import Icon, { IconSize } from "@components/Icon.astro";
import trimWhitespace from "@utils/whitespace";
import pageTitle from "@utils/pageTitle";
import { CATEGORY, SEARCH } from "@utils/urlParams";
import type { DocumentCategory } from "@type";
import { getCategories } from "@api/templates";
import routes from "@utils/routes";
import { captureError } from "@utils/sentry";
import TemplateList from "@components/TemplateList";

const url = new URL(Astro.request.url);
const currentCat = url.searchParams.get(CATEGORY) || undefined;
const search = url.searchParams.get(SEARCH) || undefined;
const PAGE_TITLE = "Wszystkie dokumenty";

let categories: DocumentCategory[],
	currentCategory: DocumentCategory | undefined,
	title: string;

const getCategoryName = (slug: string) => {
	const ct = categories.find(({ slug: id }) => id === slug);

	return ct ? ct.title.toLowerCase() : "";
};

const getCategoryList = (docCategories: string[]) =>
	docCategories
		.sort((a, b) => a.localeCompare(b))
		.map((id) => getCategoryName(id));

try {
	categories = await getCategories();

	currentCategory = categories.find(({ slug }) => slug === currentCat);
	title = currentCategory
		? `Dokumenty w kategorii ${currentCategory.title.toLowerCase()}`
		: PAGE_TITLE;
} catch (e) {
	captureError(e);

	return Astro.redirect(routes.NOT_FOUND);
}
---

<Layout
	pageName={pageTitle(title)}
	keywords={currentCategory?.keywords ?? undefined}
	description={currentCategory?.description ?? undefined}
	title=""
>
	<TemplateList client:load />
</Layout>

<style>
	aside {
		@apply flex gap-15 flex-grow flex-wrap lg:flex-nowrap;
	}

	aside form {
		@apply flex gap-10 flex-grow items-center;
	}

	aside form input[type="search"] {
		@apply flex-grow w-0;
	}

	aside form button,
	aside form a {
		@apply btn btn-alt;
	}

	aside form a span {
		@apply hidden sm:inline-block;
	}

	:global(main > div) {
		@apply col-span-12;
	}
</style>
