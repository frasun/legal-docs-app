---
import Layout from "../layouts/Layout.astro";
import { getUserByEmail, createUser, sendCode } from "../../db/auth";
import sendEmail from "../utils/email";
import error from "../utils/errors";
import pageTitle from "../utils/pageTitle";
import AuthForm from "../components/AuthForm.astro";
import InputGroup, { InputType } from "../components/InputGroup.astro";

let errors = [],
  userEmail,
  userPassword;

const url = new URL(Astro.request.url);
const redirectUrl = url.searchParams.get("redirect");

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const email = String(formData.get("email"));
  const password = String(formData.get("password"));
  const tos = String(formData.get("tos"));

  userEmail = email;
  userPassword = password;

  if (tos !== "on") {
    errors.push(error.ACCEPT_TERMS);
  } else {
    const user = await getUserByEmail(email);

    if (user) {
      const { id, active } = user;
      if (active) {
        errors.push(error.EMAIL_TAKEN);
      } else {
        const sendCodeResponse = await sendCode(id);

        if (sendCodeResponse) {
          const { code } = sendCodeResponse;

          await sendEmail(email, code as string);
          return Astro.redirect(
            `/weryfikacja?email=${encodeURIComponent(email)}${
              redirectUrl ? `&redirect=${redirectUrl}` : ""
            }`
          );
        }
      }
    } else {
      try {
        const newUser = await createUser(email, password);

        if (newUser) {
          const { email, code } = newUser;

          await sendEmail(email, code as string);
          return Astro.redirect(
            `/weryfikacja?email=${encodeURIComponent(String(email))}${
              redirectUrl ? `&redirect=${redirectUrl}` : ""
            }`
          );
        } else {
          return Astro.redirect("/404");
        }
      } catch (e) {
        if (e instanceof Error) {
          errors.push(e.message);
        }
      }
    }
  }
}
---

<Layout title={pageTitle("Załóż konto")}>
  <AuthForm>
    <h1 slot="form-header">Załóż konto</h1>
    <InputGroup>
      <label for="email">Adres e-mail</label>
      <input id="email" type="email" name="email" required value={userEmail} />
    </InputGroup>
    <InputGroup>
      <label for="password">Hasło</label>
      <input
        id="password"
        type="password"
        name="password"
        value={userPassword}
        required
        pattern="(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,20}$"
      />
      <small
        >Hasło powinno mieć co najmniej 8 znaków, maksymalnie 20 znaków, w tym
        przynajmniej jedną wielką literę i jedną cyfrę</small
      >
    </InputGroup>
    <InputGroup type={InputType.checkbox}>
      <input type="checkbox" name="tos" id="tos" required />
      <label for="tos">
        Akceptuję warunki <a
          href={`${Astro.url.origin}/regulamin`}
          target="_blank">regulaminu</a
        >
      </label>
    </InputGroup>
    <button type="submit">Załóż konto</button>
    {
      errors.length
        ? errors.map((error) => <p slot="after-submit">{error}</p>)
        : null
    }
    <footer slot="form-footer">
      Masz już konto?
      <a
        href={`${Astro.url.origin}/zaloguj-sie${
          redirectUrl ? `/?redirect=${redirectUrl}` : ""
        }`}>Zaloguj się</a
      >
    </footer>
  </AuthForm>
</Layout>
