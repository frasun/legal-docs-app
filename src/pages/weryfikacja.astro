---
import Layout from "../layouts/Layout.astro";
import pageTitle from "@utils/pageTitle";
import AuthForm from "@components/AuthForm.astro";
import * as PARAMS from "@utils/urlParams";
import routes from "@utils/routes";
import { verifyCode, getVerificationInProgress } from "@api/users";

const url = new URL(Astro.request.url);
const emailParam = url.searchParams.get(PARAMS.EMAIL);
const userEmail = emailParam ? decodeURIComponent(emailParam) : null;
const redirectParam = url.searchParams.get(PARAMS.REDIRECT);
const docParam = url.searchParams.get(PARAMS.DOCUMENT);
const draftParam = url.searchParams.get(PARAMS.DRAFT);

let errors = [];
let userPassword;

try {
  await getVerificationInProgress(userEmail);
} catch {
  return Astro.redirect(routes.NOT_FOUND);
}

const redirectUrl = redirectParam
  ? new URL(redirectParam, Astro.url.origin)
  : null;

if (redirectUrl) {
  if (docParam) {
    redirectUrl.searchParams.append(PARAMS.DOCUMENT, docParam);
  }

  if (draftParam) {
    redirectUrl.searchParams.append(PARAMS.DRAFT, draftParam);
  }
}

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const postedCode = formData.get("code") as string;

  try {
    userPassword = await verifyCode(postedCode, userEmail as string);
  } catch (e) {
    if (e instanceof Error) {
      errors.push(e.message);
    }
  }
}
---

<Layout title={pageTitle("Weryfikacja adresu e-mail")}>
  {
    userPassword ? (
      <auto-login
        email={userEmail}
        password={userPassword}
        redirect={redirectUrl}
      />
    ) : (
      <AuthForm>
        <p slot="form-header">
          Podaj kod wysłany na adres e-mail <strong>{userEmail}</strong>
        </p>
        <input type="text" name="code" required />
        <button type="submit">Wyślij</button>
        {errors.length
          ? errors.map((error) => <p slot="after-submit">{error}</p>)
          : null}
      </AuthForm>
    )
  }
</Layout>

<script>
  import "@wc/AutoLogin";
</script>
