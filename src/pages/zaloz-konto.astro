---
import Layout from "../layouts/Layout.astro";
import { getUserByEmail, createUser, sendCode } from "../../db/auth";
import bcrypt from "bcryptjs";
import sendEmail from "../utils/email";

let errors = [];

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const email = String(formData.get("email"));
  const password = String(formData.get("password"));
  const user = await getUserByEmail(email);

  if (user) {
    const { id, active } = user;
    if (active) {
      errors.push("User already exists");
    } else {
      const { code } = await sendCode(id);

      await sendAndRedirect(email, code);
      return Astro.redirect(`/weryfikacja?email=${email}`);
    }
  } else {
    const newUser = await createUser(
      email,
      bcrypt.hashSync(password, bcrypt.genSaltSync(10))
    );

    if (newUser) {
      const { email, code } = newUser;

      await sendAndRedirect(email, code);
      return Astro.redirect(`/weryfikacja?email=${email}`);
    } else {
      return Astro.redirect("/404");
    }
  }
}

async function sendAndRedirect(email, code) {
  await sendEmail(
    email,
    "Zweryfikuj adres e-mail",
    `Kod weryfikacyjny: <strong>${code}</strong>`
  );
}
---

<Layout title="Załóż konto - Prawniczek">
  {errors.length ? errors.map((error) => <p>{error}</p>) : null}
  <form method="POST">
    <input type="email" name="email" required />
    <input
      type="password"
      name="password"
      required
      pattern="(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,20}$"
    />
    <button type="submit">Załóż konto</button>
    <footer>
      <small
        >Hasło powinno mieć przynajmniej 8 znaków, maksymalnie 20 znaków, w tym
        przynajmniej jedną wielką literę i jedną cyfrę</small
      >
    </footer>
  </form>
</Layout>
