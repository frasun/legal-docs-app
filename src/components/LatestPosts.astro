---
import { LIMIT } from "@utils/urlParams";
import BlogPost from "./BlogPost.astro";
import apiHeaders from "@utils/headers";
import type { Post } from "@type";

let posts: Post[] | undefined;

try {
  const response = await fetch(
    `${Astro.url.origin}/api/posts?${LIMIT}=4&showPublished=false`,
    {
      headers: {
        ...apiHeaders,
        cookie: Astro.request.headers.get("cookie") as string,
      },
    }
  );

  if (!response.ok) {
    throw new Error("", { cause: response.status });
  }

  ({ posts } = await response.json());
} catch (e) {
  return Astro.redirect("/404");
}
---

{
  posts && (
    <section>
      <header>
        <h2>Najnowsze wpisy na blogu</h2>
      </header>
      <div>
        {posts.map(
          ({
            title,
            slug: { current: url },
            publishedAt,
            mainImage,
            excerpt,
          }) => (
            <BlogPost
              title={title}
              url={url}
              publishedAt={publishedAt}
              mainImage={mainImage}
              excerpt={excerpt}
              size="small"
            />
          )
        )}
      </div>
    </section>
  )
}

<style>
  section {
    @apply pt-30 pb-10;
  }

  section div {
    @apply grid sm:grid-cols-2 lg:grid-cols-4 gap-20;
    @apply pt-20;
  }
</style>
