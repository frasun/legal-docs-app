---
import Layout from "../../layouts/App.astro";
import pageTitle from "@utils/pageTitle";
import { PAGE } from "@utils/urlParams";
import Pagination from "@components/Pagination.astro";
import EmptyScreen from "@components/EmptyScreen.astro";
import BlogPost from "@components/BlogPost.astro";
import type { BlogPosts } from "@type";
import { getPosts } from "@api/posts";
import { getSession } from "auth-astro/server";
import { UserRoles } from "@db/user";

const PAGE_TITLE = "Blog";
const page = Number(new URL(Astro.request.url).searchParams.get(PAGE)) || 1;
const session = await getSession(Astro.request);
const showDraft = session?.user?.role === UserRoles.admin;

let posts: BlogPosts["posts"],
  pages: BlogPosts["pages"],
  currentPage: number = 1;

try {
  const response = await getPosts(
    Astro.request.url,
    undefined,
    page,
    showDraft,
    Boolean(session)
  );

  ({ posts, pages } = response);

  currentPage = page <= pages ? page : 1;
} catch (e) {
  return Astro.redirect("/404");
}
---

<Layout title={pageTitle(PAGE_TITLE)}>
  <span slot="topbar-title">{PAGE_TITLE}</span>
  {
    posts ? (
      <div>
        <section>
          {posts.map(({ title, slug, publishedAt, mainImage, excerpt }) => (
            <BlogPost
              title={title}
              url={slug}
              publishedAt={publishedAt}
              mainImage={mainImage}
              excerpt={excerpt}
            />
          ))}
        </section>
        {pages > 1 && (
          <Pagination
            pages={pages}
            currentPage={currentPage}
            url={`${Astro.url.origin}/blog`}
          />
        )}
      </div>
    ) : (
      <EmptyScreen>Brak artykułów do wyświetlenia</EmptyScreen>
    )
  }
</Layout>

<style>
  div {
    @apply flex flex-col gap-20;
  }

  section {
    @apply grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 3xl:grid-cols-5 gap-20 w-full;
    @apply pt-10;
  }
</style>
