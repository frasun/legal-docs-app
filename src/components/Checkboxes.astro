---
enum CheckboxSize {
  default = "default",
  lg = "lg",
}

interface Props {
  values: string[];
  selected: string;
  token: string;
  required: boolean;
  size?: CheckboxSize;
}

const { values, selected, token, required, size = "default" } = Astro.props;
---

<checkbox-list required={required} size={size}>
  {
    values.map((val, index) => (
      <label
        for={`cb-${index}`}
        data-checked={selected.includes(val)}
        data-label={val}
      >
        <input
          type="checkbox"
          id={`cb-${index}`}
          checked={selected.includes(val)}
        />
        {val}
      </label>
    ))
  }
  <input type="hidden" name={token} value={selected} data-type="array" />
</checkbox-list>

<style>
  checkbox-list {
    @apply flex flex-wrap gap-15;
  }

  label {
    @apply bg-white rounded-xl;
    @apply border-2 border-dark30;
    @apply px-20 py-15;
    @apply flex gap-15 items-start;
    @apply font-serif italic;
    @apply transition-colors;
  }

  label:hover {
    @apply text-dark90;
  }

  label:not([data-checked]):hover {
    @apply border-dark55;
  }

  label[data-checked] {
    @apply text-dark90;
    @apply border-dark40;
  }

  label[data-checked]:hover {
    @apply border-dark90;
  }

  input {
    @apply mt-[1px];
  }

  checkbox-list[size="lg"] {
    @apply text-xl;
  }

  checkbox-list[size="lg"] label {
    @apply p-30 gap-20;
  }
</style>

<script>
  import "@wc/CheckboxList";
</script>
