---
import Layout from "../layouts/Layout.astro";
import { getSession } from "../auth-astro/server";
import Logo from "../images/logo.astro";

const session = await getSession(Astro.request);

if (session) {
  return Astro.redirect("/moje-dokumenty");
}

const url = new URL(Astro.request.url);
const redirectUrl = url.searchParams.get("redirect");
---

<Layout title="Zaloguj się - Prawniczek">
  <login-form redirect={redirectUrl} class="auth-form">
    <a href={Astro.url.origin}>
      <Logo />
    </a>
    <h1>Zaloguj się</h1>
    <form spellcheck="false">
      <div class="input-group">
        <label for="email">Adres e-mail</label>
        <input id="email" type="email" name="email" required />
      </div>
      <div class="input-group">
        <label for="password">Hasło</label>
        <input id="password" type="password" name="password" required />
      </div>
      <button type="submit">Zaloguj się</button>
    </form>
    <footer>
      Nie masz jeszcze konta?
      <a
        href={`${Astro.url.origin}/zaloz-konto${
          redirectUrl ? `/?redirect=${redirectUrl}` : ""
        }`}
      >
        Załóż konto
      </a>
    </footer>
  </login-form>
  <aside>
    <a href={Astro.url.origin}><small>Wróć do strony głównej</small></a>
  </aside>
</Layout>

<script>
  import { signIn } from "../auth-astro/client";
  import errors from "../utils/errors";

  class LoginForm extends HTMLElement {
    form: HTMLFormElement;
    redirect: string;

    constructor() {
      super();

      this.form = this.querySelector("form");
      this.redirect = this.getAttribute("redirect");
    }

    connectedCallback() {
      this.form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(this.form);
        const email = String(formData.get("email"));
        const password = String(formData.get("password"));

        this.hideError();

        const response = await signIn("credentials", {
          redirect: false,
          email,
          password,
          callbackUrl: `${document.location.origin}${
            this.redirect ? `/${this.redirect}` : `/moje-dokumenty`
          }`,
        });

        response && this.showError();
      });
    }

    showError() {
      const error = document.createElement("p");
      error.id = "error";
      error.innerHTML = errors.WRONG_CREDENTIALS;

      window.setTimeout(() => {
        this.form.append(error);
      }, 200);
    }

    hideError() {
      const error = this.querySelector("#error");

      if (error) error.remove();
    }
  }
  customElements.define("login-form", LoginForm);
</script>

<style>
  aside {
    @apply w-full max-w-[500px] mx-auto text-center my-20;
  }
</style>
