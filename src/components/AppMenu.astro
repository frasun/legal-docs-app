---
import { SignOut } from "auth-astro/components";
import { Icon } from "astro-icon";
import screens from "@utils/screens";

const { session } = Astro.props;
---

<app-menu>
  <header>
    <a href="/" aria-label="Prawniczek">
      <picture>
        <source
          media={`(max-width:${screens.md - 1}px)`}
          srcset={`${Astro.url.origin}/logo.svg`}
        />
        <source
          media={`(min-width:${screens.md}px)`}
          srcset={`${Astro.url.origin}/logo-sign.svg`}
        />
        <img src={`${Astro.url.origin}/logo.svg`} alt="Prawniczek" />
      </picture>
    </a>
    <button aria-label="Zamknij menu">
      <Icon name="close" id="menuClose" width={24} height={24} />
    </button>
  </header>
  <div>
    <a
      href=`${Astro.url.origin}/dokumenty`
      aria-label="Nowy dokument"
      title="Nowy dokument"
      class:list={{
        active: `${Astro.url.pathname}` === `/dokumenty`,
      }}
    >
      <Icon name="add" width={24} height={24} />
      <span>Nowy dokument</span>
    </a>
    {
      session && (
        <a
          href={`${Astro.url.origin}/moje-dokumenty`}
          aria-label="Moje dokumenty"
          title="Moje dokumenty"
          class:list={{
            active: `${Astro.url.pathname}` === `/moje-dokumenty`,
          }}
        >
          <Icon name="document" width={24} height={24} />
          <span>Moje dokumenty</span>
        </a>
      )
    }
  </div>
  <footer>
    {
      session ? (
        <>
          <small>Zalogowany jako:</small>
          <span>
            <Icon name="user" width={18} height={18} />
            <span>{session.user?.email}</span>
          </span>
          <SignOut
            title="Wyloguj się"
            aira-label="Wyloguj się"
            params={{ callbackUrl: Astro.url.origin }}
          >
            <Icon name="signout" width={24} height={24} />
            <span>Wyloguj się</span>
          </SignOut>
        </>
      ) : (
        <>
          <a href={`${Astro.url.origin}/zaloguj-sie`} title="Zaloguj się">
            <Icon name="signin" width={24} height={24} />
            <span>Zaloguj się</span>
          </a>
          <a href={`${Astro.url.origin}/zaloz-konto`} title="Załóż konto">
            <Icon name="account" width={24} height={24} />
            <span>Załóż konto</span>
          </a>
        </>
      )
    }
    <aside>
      <a
        href={`${Astro.url.origin}/regulamin`}
        target="_blank"
        title="Regulamin"
      >
        <Icon name="checklist" width={18} height={18} />
        <span>Regulamin</span>
      </a>
    </aside>
  </footer>
</app-menu>

<style>
  app-menu {
    @apply fixed md:static bottom-full left-0 right-0 z-max md:z-40;
    @apply transition-transform md:transition-none;
    @apply -translate-y-full md:translate-y-0;
    @apply bg-white;
    @apply p-15;
    @apply flex flex-col gap-15;
  }

  app-menu header {
    @apply flex;
  }

  app-menu header a {
    @apply flex-grow flex-shrink-0;
  }

  app-menu header button {
    @apply btn btn-alt;
    @apply md:hidden;
  }

  app-menu > div,
  app-menu > footer {
    @apply flex flex-col gap-10;
  }

  app-menu > div {
    @apply flex-grow;
  }

  app-menu > div a,
  app-menu > footer > a,
  app-menu > div button,
  app-menu > footer button {
    @apply btn btn-alt;
  }

  app-menu > div a span,
  app-menu > footer a span,
  app-menu > footer button span {
    @apply md:hidden;
  }

  app-menu > footer > span {
    @apply flex gap-20 items-center px-10;
    @apply md:hidden;
  }

  app-menu > footer > small {
    @apply md:hidden mt-20;
  }

  a.active {
    @apply bg-transparent pointer-events-none text-orange;
  }

  a.active svg {
    @apply text-orange;
  }

  app-menu > footer aside {
    @apply mt-15 md:mt-0;
  }

  app-menu > footer aside svg {
    @apply mx-auto;
    @apply hidden md:block;
  }
</style>

<script>
  import * as backdrop from "@utils/backdrop";
  import screens from "@utils/screens";

  class AppMenu extends HTMLElement {
    close: HTMLButtonElement | null;
    isOpen: boolean;

    constructor() {
      super();

      this.close = this.querySelector("header > button");
      this.isOpen = false;
    }

    connectedCallback() {
      document.body.addEventListener("showMobileMenu", () => {
        if (window.innerWidth < screens.md) {
          this.showMenu();
        }
      });

      window.addEventListener("resize", () => {
        if (window.innerWidth >= screens.md) {
          this.hideMenu();
        }
      });

      if (this.close) {
        this.close.addEventListener("click", () => {
          if (this.isOpen) {
            this.hideMenu();
          }
        });
      }
    }

    showMenu() {
      backdrop.addBackdrop(() => {
        this.hideMenu();
      });
      this.style.transform = "translateY(100%)";
      this.isOpen = true;
    }

    hideMenu() {
      if (this.isOpen) {
        this.removeAttribute("style");
        backdrop.removeBackdrop();
        this.isOpen = false;
      }
    }
  }
  customElements.define("app-menu", AppMenu);
</script>
