---
import Layout from "../../layouts/App.astro";
import { Icon } from "astro-icon";
import DocumentTile from "@components/DocumentTile.astro";
import EmptyScreen from "@components/EmptyScreen.astro";
import trimWhitespace from "@utils/whitespace";
import pageTitle from "@utils/pageTitle";
import { CATEGORY, SEARCH } from "@utils/urlParams";
import type { TemplateShort, DocumentCategory } from "@type";
import { getCategories, getDocumentTemplates } from "@api/templates";
import routes from "@utils/routes";
import { captureError } from "@utils/sentry";

const url = new URL(Astro.request.url);
const currentCat = url.searchParams.get(CATEGORY);
const search = url.searchParams.get(SEARCH);
const PAGE_TITLE = "Wszystkie dokumenty";

let documents: TemplateShort[],
  categories: DocumentCategory[],
  currentCategory: DocumentCategory | undefined,
  title: string;

try {
  [documents, categories] = await Promise.all([
    getDocumentTemplates(
      `${Astro.request.headers.get("cookie")}`,
      currentCat ?? undefined,
      search ?? undefined
    ),
    getCategories(),
  ]);

  currentCategory = categories.find(({ slug }) => slug === currentCat);
  title = currentCategory
    ? `Dokumenty w kategorii ${currentCategory.title.toLowerCase()}`
    : PAGE_TITLE;
} catch (e) {
  captureError(e);

  return Astro.redirect(routes.NOT_FOUND);
}
---

<Layout title={pageTitle(title)}>
  <span slot="topbar-title">{title}</span>
  <header slot="content-header">
    <search-documents>
      <form method="GET" action={Astro.request.url}>
        <input
          type="search"
          placeholder="Wyszukaj dokument lub sprawę np. umowa najmu, testament"
          spellcheck="false"
          name={SEARCH}
          value={search ? trimWhitespace(search) : ""}
        />
        {
          currentCat && (
            <input type="hidden" name={CATEGORY} value={currentCat} />
          )
        }
        <Icon name="search" width={24} height={24} />
      </form>
      {
        search && (
          <button aria-label="Wyczyść">
            <Icon name="clear" width={18} height={18} />
            <span>Wyczyść</span>
          </button>
        )
      }
    </search-documents>
    <category-selector>
      <button>
        <Icon name="options" width={24} height={24} />
      </button>
      <label for="category">Kategorie</label>
      <select id="category">
        <option value="">Wszystkie</option>
        {
          categories.map(({ slug: id, title: name }) => (
            <option value={id} selected={id === currentCat}>
              {name}
            </option>
          ))
        }
      </select>
    </category-selector>
  </header>
  {
    documents.length ? (
      <section>
        {documents.map(({ title, slug, categories: cats, price, draft }) => (
          <DocumentTile
            slug={slug}
            title={title}
            docCategories={cats}
            categories={categories}
            price={price}
            draft={draft}
          />
        ))}
      </section>
    ) : (
      <EmptyScreen>Brak dokumentów do wyświetlenia</EmptyScreen>
    )
  }
</Layout>

<style>
  header {
    @apply fixed top-auto bottom-0 left-0 right-0;
    @apply border-t-[1px] border-dark40;
    @apply bg-gray flex gap-15 px-20 py-10;
  }

  @screen md {
    header {
      @apply sticky top-[var(--navbar-height)];
      @apply border-0 p-0 pb-10 gap-30;
    }
  }

  section {
    @apply grid md:auto-rows-fr sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 3xl:grid-cols-5 gap-20 w-full;
    @apply pt-10;
  }

  category-selector {
    @apply flex gap-10 items-center;
    @apply relative;
  }

  category-selector label {
    @apply hidden sm:inline-block;
  }

  category-selector button {
    @apply sm:hidden;
    @apply absolute left-1/2 -translate-x-1/2 pointer-events-none bg-dark10;
    @apply py-[.5rem] px-10 rounded;
  }

  @media (max-width: 639px) {
    category-selector select {
      @apply max-w-[24px] min-w-[24px] border-0 bg-dark10 text-transparent;
      @apply appearance-none opacity-0;
    }
  }

  search-documents {
    @apply flex-grow;
    @apply flex gap-10 items-center;
  }

  search-documents form {
    @apply flex-grow relative;
  }

  search-documents form :global(> svg) {
    @apply absolute left-20 top-0 translate-y-1/2;
    @apply hidden sm:block;
  }

  search-documents input[type="search"] {
    @apply w-full;
    @apply sm:pl-60;
  }

  search-documents button {
    @apply btn btn-alt;
  }

  search-documents button span {
    @apply hidden sm:inline-block;
  }

  search-documents button svg {
    @apply inline-block sm:hidden;
  }
</style>

<script>
  import "@wc/CategorySelector";
  import "@wc/SearchDocuments";
</script>
