---
import { entityEnum } from "@utils/constants";
import InputGroup, { InputSize } from "@components/InputGroup.astro";
import Address from "./Address.astro";

const {
  name,
  type,
  personName,
  personStreet,
  personApt,
  personPostalCode,
  personCity,
  personPin,
  companyName,
  companyStreet,
  companyApt,
  companyPostalCode,
  companyCity,
  companyPin,
} = Astro.props;
---

<data-selector>
  <InputGroup>
    <label for="type">Rodzaj podmiotu</label>
    <select id="type" name={`${name}Type`} value={type}>
      {
        entityEnum.map((entityType) => (
          <option selected={type === entityType}>{entityType}</option>
        ))
      }
    </select>
  </InputGroup>
  <fieldset
    data-type={entityEnum[0]}
    style={type === entityEnum[1] ? `display:none` : ``}
  >
    <InputGroup size={InputSize.lg}>
      <label for="personName">ImiÄ™ i nazwisko</label>
      <input
        id="personName"
        type="text"
        name={`${name}PersonName`}
        value={personName}
        class="flex-grow"
      />
    </InputGroup>
    <InputGroup>
      <label for="personPin">Numer PESEL</label>
      <input
        id="personPin"
        type="text"
        name={`${name}PersonPin`}
        value={personPin}
        class="flex-grow"
      />
    </InputGroup>
    <Address
      street={personStreet}
      apt={personApt}
      postalCode={personPostalCode}
      city={personCity}
      streetFieldName={`${name}PersonStreet`}
      aptFieldName={`${name}PersonApt`}
      postalCodeFieldName={`${name}PersonPostalCode`}
      cityFieldName={`${name}PersonCity`}
    />
  </fieldset>
  <fieldset
    data-type={entityEnum[1]}
    style={type === entityEnum[0] ? `display:none` : ``}
  >
    <InputGroup size={InputSize.lg}>
      <label for="companyName">Nazwa firmy</label>
      <input
        id="companyName"
        type="text"
        name={`${name}CompanyName`}
        value={companyName}
        class="flex-grow"
      />
    </InputGroup>
    <InputGroup>
      <label for="companyPin">Numer NIP</label>
      <input
        id="companyPin"
        type="text"
        name={`${name}CompanyPin`}
        value={companyPin}
        class="flex-grow"
      />
    </InputGroup>
    <Address
      street={companyStreet}
      apt={companyApt}
      postalCode={companyPostalCode}
      city={companyCity}
      streetFieldName={`${name}CompanyStreet`}
      aptFieldName={`${name}CompanyApt`}
      postalCodeFieldName={`${name}CompanyPostalCode`}
      cityFieldName={`${name}CompanyCity`}
    />
  </fieldset>
</data-selector>

<style>
  data-selector {
    @apply flex flex-col gap-20;
  }
</style>

<script>
  class DataSelector extends HTMLElement {
    selector: HTMLSelectElement | null;
    fieldsets: NodeListOf<HTMLFieldSetElement>;

    constructor() {
      super();

      this.selector = this.querySelector("select");
      this.fieldsets = this.querySelectorAll("fieldset");
    }

    connectedCallback() {
      if (this.selector) {
        this.selector.addEventListener("change", () => {
          const activeTab = this.selector?.value;

          if (activeTab) {
            Array.from(this.fieldsets).forEach((fieldset) => {
              if (fieldset.getAttribute("data-type") === activeTab) {
                fieldset.removeAttribute("style");
              } else {
                fieldset.style.display = "none";
                const inputs = fieldset.querySelectorAll("input");

                if (Array.from(inputs).length) {
                  Array.from(inputs).forEach((input) => {
                    input.value = "";
                  });
                }
              }
            });
          }
        });
      }
    }
  }

  customElements.define("data-selector", DataSelector);
</script>
